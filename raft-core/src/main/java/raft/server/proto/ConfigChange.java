// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: commands.proto

package raft.server.proto;

/**
 * Protobuf type {@code raft.server.proto.ConfigChange}
 */
public  final class ConfigChange extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:raft.server.proto.ConfigChange)
    ConfigChangeOrBuilder {
  // Use ConfigChange.newBuilder() to construct.
  private ConfigChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConfigChange() {
    peerId_ = "";
    action_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private ConfigChange(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            peerId_ = s;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            action_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return raft.server.proto.Commands.internal_static_raft_server_proto_ConfigChange_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return raft.server.proto.Commands.internal_static_raft_server_proto_ConfigChange_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            raft.server.proto.ConfigChange.class, raft.server.proto.ConfigChange.Builder.class);
  }

  /**
   * Protobuf enum {@code raft.server.proto.ConfigChange.ConfigChangeAction}
   */
  public enum ConfigChangeAction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ADD_NODE = 0;</code>
     */
    ADD_NODE(0),
    /**
     * <code>REMOVE_NODE = 1;</code>
     */
    REMOVE_NODE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ADD_NODE = 0;</code>
     */
    public static final int ADD_NODE_VALUE = 0;
    /**
     * <code>REMOVE_NODE = 1;</code>
     */
    public static final int REMOVE_NODE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ConfigChangeAction valueOf(int value) {
      return forNumber(value);
    }

    public static ConfigChangeAction forNumber(int value) {
      switch (value) {
        case 0: return ADD_NODE;
        case 1: return REMOVE_NODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ConfigChangeAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ConfigChangeAction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ConfigChangeAction>() {
            public ConfigChangeAction findValueByNumber(int number) {
              return ConfigChangeAction.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return raft.server.proto.ConfigChange.getDescriptor().getEnumTypes().get(0);
    }

    private static final ConfigChangeAction[] VALUES = values();

    public static ConfigChangeAction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ConfigChangeAction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:raft.server.proto.ConfigChange.ConfigChangeAction)
  }

  public static final int PEER_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object peerId_;
  /**
   * <code>optional string peer_id = 1;</code>
   */
  public java.lang.String getPeerId() {
    java.lang.Object ref = peerId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      peerId_ = s;
      return s;
    }
  }
  /**
   * <code>optional string peer_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getPeerIdBytes() {
    java.lang.Object ref = peerId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      peerId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ACTION_FIELD_NUMBER = 2;
  private int action_;
  /**
   * <code>optional .raft.server.proto.ConfigChange.ConfigChangeAction action = 2;</code>
   */
  public int getActionValue() {
    return action_;
  }
  /**
   * <code>optional .raft.server.proto.ConfigChange.ConfigChangeAction action = 2;</code>
   */
  public raft.server.proto.ConfigChange.ConfigChangeAction getAction() {
    raft.server.proto.ConfigChange.ConfigChangeAction result = raft.server.proto.ConfigChange.ConfigChangeAction.valueOf(action_);
    return result == null ? raft.server.proto.ConfigChange.ConfigChangeAction.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getPeerIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, peerId_);
    }
    if (action_ != raft.server.proto.ConfigChange.ConfigChangeAction.ADD_NODE.getNumber()) {
      output.writeEnum(2, action_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getPeerIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, peerId_);
    }
    if (action_ != raft.server.proto.ConfigChange.ConfigChangeAction.ADD_NODE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, action_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof raft.server.proto.ConfigChange)) {
      return super.equals(obj);
    }
    raft.server.proto.ConfigChange other = (raft.server.proto.ConfigChange) obj;

    boolean result = true;
    result = result && getPeerId()
        .equals(other.getPeerId());
    result = result && action_ == other.action_;
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + PEER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getPeerId().hashCode();
    hash = (37 * hash) + ACTION_FIELD_NUMBER;
    hash = (53 * hash) + action_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static raft.server.proto.ConfigChange parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static raft.server.proto.ConfigChange parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static raft.server.proto.ConfigChange parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static raft.server.proto.ConfigChange parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static raft.server.proto.ConfigChange parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static raft.server.proto.ConfigChange parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static raft.server.proto.ConfigChange parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static raft.server.proto.ConfigChange parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static raft.server.proto.ConfigChange parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static raft.server.proto.ConfigChange parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(raft.server.proto.ConfigChange prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code raft.server.proto.ConfigChange}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:raft.server.proto.ConfigChange)
      raft.server.proto.ConfigChangeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return raft.server.proto.Commands.internal_static_raft_server_proto_ConfigChange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return raft.server.proto.Commands.internal_static_raft_server_proto_ConfigChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              raft.server.proto.ConfigChange.class, raft.server.proto.ConfigChange.Builder.class);
    }

    // Construct using raft.server.proto.ConfigChange.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      peerId_ = "";

      action_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return raft.server.proto.Commands.internal_static_raft_server_proto_ConfigChange_descriptor;
    }

    public raft.server.proto.ConfigChange getDefaultInstanceForType() {
      return raft.server.proto.ConfigChange.getDefaultInstance();
    }

    public raft.server.proto.ConfigChange build() {
      raft.server.proto.ConfigChange result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public raft.server.proto.ConfigChange buildPartial() {
      raft.server.proto.ConfigChange result = new raft.server.proto.ConfigChange(this);
      result.peerId_ = peerId_;
      result.action_ = action_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof raft.server.proto.ConfigChange) {
        return mergeFrom((raft.server.proto.ConfigChange)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(raft.server.proto.ConfigChange other) {
      if (other == raft.server.proto.ConfigChange.getDefaultInstance()) return this;
      if (!other.getPeerId().isEmpty()) {
        peerId_ = other.peerId_;
        onChanged();
      }
      if (other.action_ != 0) {
        setActionValue(other.getActionValue());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      raft.server.proto.ConfigChange parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (raft.server.proto.ConfigChange) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object peerId_ = "";
    /**
     * <code>optional string peer_id = 1;</code>
     */
    public java.lang.String getPeerId() {
      java.lang.Object ref = peerId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        peerId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string peer_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPeerIdBytes() {
      java.lang.Object ref = peerId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        peerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string peer_id = 1;</code>
     */
    public Builder setPeerId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      peerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string peer_id = 1;</code>
     */
    public Builder clearPeerId() {
      
      peerId_ = getDefaultInstance().getPeerId();
      onChanged();
      return this;
    }
    /**
     * <code>optional string peer_id = 1;</code>
     */
    public Builder setPeerIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      peerId_ = value;
      onChanged();
      return this;
    }

    private int action_ = 0;
    /**
     * <code>optional .raft.server.proto.ConfigChange.ConfigChangeAction action = 2;</code>
     */
    public int getActionValue() {
      return action_;
    }
    /**
     * <code>optional .raft.server.proto.ConfigChange.ConfigChangeAction action = 2;</code>
     */
    public Builder setActionValue(int value) {
      action_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .raft.server.proto.ConfigChange.ConfigChangeAction action = 2;</code>
     */
    public raft.server.proto.ConfigChange.ConfigChangeAction getAction() {
      raft.server.proto.ConfigChange.ConfigChangeAction result = raft.server.proto.ConfigChange.ConfigChangeAction.valueOf(action_);
      return result == null ? raft.server.proto.ConfigChange.ConfigChangeAction.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .raft.server.proto.ConfigChange.ConfigChangeAction action = 2;</code>
     */
    public Builder setAction(raft.server.proto.ConfigChange.ConfigChangeAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      action_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .raft.server.proto.ConfigChange.ConfigChangeAction action = 2;</code>
     */
    public Builder clearAction() {
      
      action_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:raft.server.proto.ConfigChange)
  }

  // @@protoc_insertion_point(class_scope:raft.server.proto.ConfigChange)
  private static final raft.server.proto.ConfigChange DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new raft.server.proto.ConfigChange();
  }

  public static raft.server.proto.ConfigChange getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConfigChange>
      PARSER = new com.google.protobuf.AbstractParser<ConfigChange>() {
    public ConfigChange parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConfigChange(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ConfigChange> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConfigChange> getParserForType() {
    return PARSER;
  }

  public raft.server.proto.ConfigChange getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

